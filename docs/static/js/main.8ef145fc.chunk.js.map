{"version":3,"sources":["components/AddCategory.js","components/GiftItem.js","helper/getGifts.js","hooks/useFetchGifs.js","components/Gif.js","components/giftExpert.js","App.js","reportWebVitals.js","index.js"],"names":["AddCategory","setCategory","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categ","type","value","onChange","target","GiftItem","title","url","src","alt","getGifts","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","id","images","downsized_medium","UseFetchGifs","loading","state","setstate","useEffect","setTimeout","then","imgs","Gif","console","log","GiftExpert","categories","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wMA+BeA,EA5BK,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,YAClB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAcA,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAE3BR,GAAa,SAAAS,GAAK,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAKlB,SACA,uBACAO,KAAK,OACLC,MAAOT,EACPU,SAjBsB,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,QCEhBG,EATE,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IACvB,OACI,gCACG,qBAAKC,IAAKD,EAAKE,IAAKH,IACpB,4BAAIA,Q,uBCJFI,EAAQ,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACdL,EADc,iDACkCM,UAAWF,GAD7C,+DAEAG,MAAMP,GAFN,cAEdQ,EAFc,gBAGCA,EAAKC,OAHN,uBAGbC,EAHa,EAGbA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRf,MAAOc,EAAId,MACXC,IAAG,UAAEa,EAAIE,cAAN,aAAE,EAAYC,iBAAiBhB,QATtB,kBAYbW,GAZa,4CAAH,sDC4BNM,EAzBM,SAACb,GAClB,MAA0BnB,mBAAS,CAC/ByB,KAAM,GACNQ,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAqBA,OAhBAC,qBAAU,WAENC,YAAW,WACPnB,EAASC,GACRmB,MAAK,SAAAC,GACFJ,EAAS,CACLV,KAAMc,EACNN,SAAS,SAGnB,OAEH,CAACd,IAIGe,GCEIM,EAvBH,SAAC,GAAgB,IAAfrB,EAAc,EAAdA,SAEd,EAAgCa,EAAab,GAAhCW,EAAb,EAAOL,KAAcQ,EAArB,EAAqBA,QAEjB,OADJQ,QAAQC,IAAIT,GAEJ,qCACE,6BAAKd,IAELc,GAAW,yCAERH,EAAOH,KAAM,SAAAC,GAAG,OAEb,cAAC,EAAD,eAEKA,GADAA,EAAIC,WCGVc,EAjBI,WAEhB,MAAkC3C,mBAAS,CAAC,WAA5C,mBAAO4C,EAAP,KAAmB7C,EAAnB,KACC,OACI,qCACI,qCACA,uBACI,cAAC,EAAD,CAAaA,YAAaA,IAC9B,6BACK6C,EAAWjB,KAAI,SAACR,EAAUU,GACvB,OAAO,cAAC,EAAD,CAAcV,SAAUA,GAAdU,YCLtBgB,MANf,WACE,OACE,cAAC,EAAD,KCQWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBV,MAAK,YAAkD,IAA/CW,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.8ef145fc.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport PropTypes from 'prop-types'\r\n\r\nconst AddCategory = ({setCategory}) => {\r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value)\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        if (inputValue.trim().length > 2 ) {\r\n\r\n            setCategory( categ => [inputValue, ...categ])\r\n            setInputValue('');\r\n        }\r\n\r\n    }\r\n    return ( \r\n        <form onSubmit={handleSubmit}>\r\n        <input \r\n        type=\"text\" \r\n        value={inputValue}\r\n        onChange={handleInputChange}\r\n        />\r\n        </form>\r\n        \r\n     );\r\n}\r\n \r\n\r\nexport default AddCategory;\r\n\r\nAddCategory.propTypes = {\r\n    setCategory: PropTypes.func.isRequired\r\n}","const GiftItem = ({ title, url}) => {\r\n    return ( \r\n        <div>\r\n           <img src={url} alt={title} />\r\n           <p>{title}</p>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default GiftItem;","export const getGifts = async(category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI (category)}&limit=10&api_key=kvqnu1GdfYbCClVChQNgvfsoGs0of9TR`\r\n    const resp =  await fetch(url);\r\n    const {data} = await resp.json()\r\n    \r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    return gifs\r\n    // console.log(gifs);\r\n    // setImages(gifs)\r\n}","import { useState, useEffect } from \"react\";\r\nimport { getGifts } from \"../helper/getGifts\";\r\n\r\nconst UseFetchGifs = (category) => {\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n\r\n    useEffect(() => {\r\n\r\n        setTimeout(() => {\r\n            getGifts(category)\r\n            .then(imgs => {\r\n                setstate({\r\n                    data: imgs,\r\n                    loading: false\r\n                })\r\n            })\r\n        },2000)\r\n       \r\n    }, [category])\r\n\r\n\r\n    \r\n    return state\r\n}\r\n \r\nexport default UseFetchGifs;","// import { useState, useEffect } from \"react\";\r\nimport GiftItem from \"./GiftItem\";\r\nimport UseFetchGifs from \"../hooks/useFetchGifs\";\r\n\r\nconst Gif = ({category}) => {\r\n\r\nconst {data: images, loading} = UseFetchGifs(category)\r\nconsole.log(loading);\r\n    return ( \r\n        <>\r\n          <h3>{category}</h3>\r\n\r\n         {loading && <h3>Loading</h3>}\r\n        \r\n            {images.map(  img => ( \r\n                \r\n                <GiftItem\r\n                key={img.id} \r\n                { ...img } \r\n                />\r\n                \r\n            ))}\r\n        \r\n        </>\r\n     );\r\n}\r\n \r\nexport default Gif;","import { useState } from \"react\";\r\nimport AddCategory from \"./AddCategory\";\r\nimport Gif from \"./Gif\";\r\nconst GiftExpert = () => {\r\n    \r\n   const [categories, setCategory] = useState(['hahaha'])\r\n    return ( \r\n        <>\r\n            <h1>Gif</h1>\r\n            <hr />\r\n                <AddCategory setCategory={setCategory} />\r\n            <ol>\r\n                {categories.map((category, id) => {\r\n                    return <Gif key={id} category={category}/>\r\n                })}\r\n            </ol>\r\n        </>\r\n     );\r\n}\r\n \r\nexport default GiftExpert;","import GiftExpert from './components/giftExpert';\n\nfunction App() {\n  return (\n    <GiftExpert />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}